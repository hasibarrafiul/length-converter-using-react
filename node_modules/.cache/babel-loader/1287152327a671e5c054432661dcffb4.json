{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\3S\\\\Desktop\\\\reactPractice\\\\unitconverter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [unit1, setUnit1] = useState('');\n  const [unit2, setUnit2] = useState('');\n  const [input, setInput] = useState(0);\n  const [result, setResult] = useState(0);\n  console.log(unit1);\n  console.log(unit2);\n\n  const convert = () => {\n    if (unit1 === \"Kilometer\") {\n      if (unit2 === \"Meter\") {\n        setResult(input * 1000);\n      }\n\n      if (unit2 === \"Centimeter\") {\n        setResult(input * 100000);\n      }\n\n      if (unit2 === \"Millimeter\") {\n        setResult(input * 1000000);\n      }\n\n      if (unit2 === \"Micrometer\") {\n        setResult(input * 1000000000);\n      }\n\n      if (unit2 === \"Nanometer\") {\n        setResult(input * 1000000000000);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Length Converter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), \"Convert from\", /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"demo-simple-select-filled-label\",\n      id: \"demo-simple-select-filled\",\n      onChange: e => setUnit1(e.target.value),\n      value: unit1,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Kilometer\",\n        children: \"Kilometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Meter\",\n        children: \"Meter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Centimeter\",\n        children: \"Centimeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Millimeter\",\n        children: \"Millimeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Micrometer\",\n        children: \"Micrometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Nanometer\",\n        children: \"Nanometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \"Convert to \", /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"demo-simple-select-filled-label\",\n      id: \"demo-simple-select-filled\",\n      onChange: e => setUnit2(e.target.value),\n      value: unit2,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Kilometer\",\n        children: \"Kilometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Meter\",\n        children: \"Meter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Centimeter\",\n        children: \"Centimeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Millimeter\",\n        children: \"Millimeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Micrometer\",\n        children: \"Micrometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Nanometer\",\n        children: \"Nanometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this), \"\\\"Enter amount to convert\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => {\n        setInput(e.target.value);\n      },\n      value: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: e => convert(),\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \"Result: \", result]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"29E/lRqw9BHMkH93PMjckasYJj8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MenuItem","Select","Button","useState","App","unit1","setUnit1","unit2","setUnit2","input","setInput","result","setResult","console","log","convert","e","target","value"],"sources":["C:/Users/3S/Desktop/reactPractice/unitconverter/src/App.js"],"sourcesContent":["import MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [unit1, setUnit1] = useState('')\n  const [unit2, setUnit2] = useState('')\n  const [input, setInput] = useState(0)\n  const [result, setResult] = useState(0)\n  console.log(unit1)\n  console.log(unit2)\n\n  const convert = () =>{\n      if(unit1 === \"Kilometer\"){\n          if(unit2=== \"Meter\"){\n            setResult(input*1000)\n          }\n          if(unit2 === \"Centimeter\"){\n            setResult(input*100000)\n          }\n          if(unit2 === \"Millimeter\"){\n            setResult(input*1000000)\n          }\n          if(unit2 === \"Micrometer\"){\n            setResult(input*1000000000)\n          }\n          if(unit2 === \"Nanometer\"){\n            setResult(input*1000000000000)\n          }\n      }\n  }\n\n  return (\n    <div className=\"App\">\n      Length Converter <br></br>\n      Convert from\n      <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          onChange={e=>setUnit1(e.target.value)}\n          value={unit1}\n        >\n          <MenuItem value={\"Kilometer\"}>Kilometer</MenuItem>\n          <MenuItem value={\"Meter\"}>Meter</MenuItem>\n          <MenuItem value={\"Centimeter\"}>Centimeter</MenuItem>\n          <MenuItem value={\"Millimeter\"}>Millimeter</MenuItem>\n          <MenuItem value={\"Micrometer\"}>Micrometer</MenuItem>\n          <MenuItem value={\"Nanometer\"}>Nanometer</MenuItem>\n        </Select> \n        Convert to <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          onChange={e=>setUnit2(e.target.value)}\n          value={unit2}\n        >\n          <MenuItem value={\"Kilometer\"}>Kilometer</MenuItem>\n          <MenuItem value={\"Meter\"}>Meter</MenuItem>\n          <MenuItem value={\"Centimeter\"}>Centimeter</MenuItem>\n          <MenuItem value={\"Millimeter\"}>Millimeter</MenuItem>\n          <MenuItem value={\"Micrometer\"}>Micrometer</MenuItem>\n          <MenuItem value={\"Nanometer\"}>Nanometer</MenuItem>\n        </Select>\n\n        \"Enter amount to convert<br></br>\n      <input type=\"number\" onChange={(e) => {setInput(e.target.value)}} value={input}/>\n      <Button variant=\"contained\" onClick={(e)=>convert()}>Convert</Button>\n      <br></br>\n      Result: {result}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}